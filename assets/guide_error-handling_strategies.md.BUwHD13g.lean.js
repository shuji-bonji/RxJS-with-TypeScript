import{_ as i,c as a,o as n,a2 as h}from"./chunks/framework.BvXV5w7a.js";const g=JSON.parse('{"title":"RxJSのエラー処理戦略","description":"RxJSの包括的なエラー処理戦略を解説します。catchError、retry、retryWhen、finalizeオペレーターの組み合わせ方、指数バックオフによる再試行、エラー時のリソース解放、フォールバック処理など実践的なパターンを紹介します。","frontmatter":{"description":"RxJSの包括的なエラー処理戦略を解説します。catchError、retry、retryWhen、finalizeオペレーターの組み合わせ方、指数バックオフによる再試行、エラー時のリソース解放、フォールバック処理など実践的なパターンを紹介します。"},"headers":[],"relativePath":"guide/error-handling/strategies.md","filePath":"guide/error-handling/strategies.md"}'),k={name:"guide/error-handling/strategies.md"};function l(p,s,t,E,e,r){return n(),a("div",null,s[0]||(s[0]=[h("",29)]))}const y=i(k,[["render",l]]);export{g as __pageData,y as default};
