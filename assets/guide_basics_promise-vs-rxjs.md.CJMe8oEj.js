import{_ as s,c as i,o as t,a2 as n}from"./chunks/framework.BvXV5w7a.js";const v=JSON.parse('{"title":"PromiseとRxJSの違い","description":"PromiseとRxJSの違いを理解し、適切な使い分けを学びます。単一の非同期処理にはPromise、複雑なストリーム処理にはRxJSが適しています。","frontmatter":{"description":"PromiseとRxJSの違いを理解し、適切な使い分けを学びます。単一の非同期処理にはPromise、複雑なストリーム処理にはRxJSが適しています。"},"headers":[],"relativePath":"guide/basics/promise-vs-rxjs.md","filePath":"guide/basics/promise-vs-rxjs.md"}'),d={name:"guide/basics/promise-vs-rxjs.md"};function h(l,a,k,p,c,e){return t(),i("div",null,a[0]||(a[0]=[n(`<h1 id="promiseとrxjsの違い" tabindex="-1" data-v-fc87a946>PromiseとRxJSの違い <a class="header-anchor" href="#promiseとrxjsの違い" aria-label="Permalink to &quot;PromiseとRxJSの違い&quot;" data-v-fc87a946>​</a></h1><h2 id="概要" tabindex="-1" data-v-fc87a946>概要 <a class="header-anchor" href="#概要" aria-label="Permalink to &quot;概要&quot;" data-v-fc87a946>​</a></h2><p data-v-fc87a946>JavaScript/TypeScriptにおける非同期処理を扱う主要なツールとして、 <strong data-v-fc87a946>Promise</strong>と<strong data-v-fc87a946>RxJS（Observable）</strong> があります。両者は似た目的で使用されることがありますが、設計思想とユースケースが大きく異なります。</p><p data-v-fc87a946>このページでは、PromiseとRxJSの違いを理解し、どちらを使うべきかを判断するための情報を提供します。</p><h2 id="基本的な違い" tabindex="-1" data-v-fc87a946>基本的な違い <a class="header-anchor" href="#基本的な違い" aria-label="Permalink to &quot;基本的な違い&quot;" data-v-fc87a946>​</a></h2><table tabindex="0" data-v-fc87a946><thead data-v-fc87a946><tr data-v-fc87a946><th data-v-fc87a946>項目</th><th data-v-fc87a946>Promise</th><th data-v-fc87a946>RxJS (Observable)</th></tr></thead><tbody data-v-fc87a946><tr data-v-fc87a946><td data-v-fc87a946><strong data-v-fc87a946>標準化</strong></td><td data-v-fc87a946>JavaScript標準（ES6/ES2015）</td><td data-v-fc87a946>サードパーティライブラリ</td></tr><tr data-v-fc87a946><td data-v-fc87a946><strong data-v-fc87a946>発行する値</strong></td><td data-v-fc87a946>単一の値</td><td data-v-fc87a946>0個以上の複数の値</td></tr><tr data-v-fc87a946><td data-v-fc87a946><strong data-v-fc87a946>評価</strong></td><td data-v-fc87a946>Eager（作成時に即実行）</td><td data-v-fc87a946>Lazy（購読時に実行）</td></tr><tr data-v-fc87a946><td data-v-fc87a946><strong data-v-fc87a946>キャンセル</strong></td><td data-v-fc87a946>不可<sup class="footnote-ref" data-v-fc87a946><a href="#fn1" id="fnref1" data-v-fc87a946>[1]</a></sup></td><td data-v-fc87a946>可（<code data-v-fc87a946>unsubscribe()</code>）</td></tr><tr data-v-fc87a946><td data-v-fc87a946><strong data-v-fc87a946>再利用</strong></td><td data-v-fc87a946>不可（結果は1度だけ）</td><td data-v-fc87a946>可（何度でも購読可能）</td></tr><tr data-v-fc87a946><td data-v-fc87a946><strong data-v-fc87a946>学習コスト</strong></td><td data-v-fc87a946>低い</td><td data-v-fc87a946>高い（オペレーターの理解が必要）</td></tr><tr data-v-fc87a946><td data-v-fc87a946><strong data-v-fc87a946>ユースケース</strong></td><td data-v-fc87a946>単一の非同期処理</td><td data-v-fc87a946>複雑なストリーム処理</td></tr></tbody></table><h2 id="コード比較" tabindex="-1" data-v-fc87a946>コード比較 <a class="header-anchor" href="#コード比較" aria-label="Permalink to &quot;コード比較&quot;" data-v-fc87a946>​</a></h2><h3 id="単一の非同期処理" tabindex="-1" data-v-fc87a946>単一の非同期処理 <a class="header-anchor" href="#単一の非同期処理" aria-label="Permalink to &quot;単一の非同期処理&quot;" data-v-fc87a946>​</a></h3><h4 id="promise" tabindex="-1" data-v-fc87a946>Promise <a class="header-anchor" href="#promise" aria-label="Permalink to &quot;Promise&quot;" data-v-fc87a946>​</a></h4><div class="language-ts vp-adaptive-theme" data-v-fc87a946><button title="Copy Code" class="copy" data-v-fc87a946></button><span class="lang" data-v-fc87a946>ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-fc87a946><code data-v-fc87a946><span class="line" data-v-fc87a946><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>// Promiseは作成時に即実行される（Eager）</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946> promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946> fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946>&#39;https://api.example.com/data&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>)</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-fc87a946>response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> response.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>())</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-fc87a946>data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(data))</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-fc87a946>error</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(error));</span></span></code></pre></div><h4 id="rxjs" tabindex="-1" data-v-fc87a946>RxJS <a class="header-anchor" href="#rxjs" aria-label="Permalink to &quot;RxJS&quot;" data-v-fc87a946>​</a></h4><div class="language-ts vp-adaptive-theme" data-v-fc87a946><button title="Copy Code" class="copy" data-v-fc87a946></button><span class="lang" data-v-fc87a946>ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-fc87a946><code data-v-fc87a946><span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> { from } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946> &#39;rxjs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>;</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> { map, catchError } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946> &#39;rxjs/operators&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>;</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> { of } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946> &#39;rxjs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>;</span></span>
<span class="line" data-v-fc87a946></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>// Observableは購読するまで実行されない（Lazy）</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946> observable$</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946>&#39;https://api.example.com/data&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>)).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>pipe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>  map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-fc87a946>response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> response.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>()),</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>  catchError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-fc87a946>error</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> {</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(error);</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>    return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946> of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946>null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>);</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>  })</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>);</span></span>
<span class="line" data-v-fc87a946></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>// 購読して初めて実行される</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>observable$.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>subscribe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-fc87a946>data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(data));</span></span></code></pre></div><h3 id="複数の値を扱う場合" tabindex="-1" data-v-fc87a946>複数の値を扱う場合 <a class="header-anchor" href="#複数の値を扱う場合" aria-label="Permalink to &quot;複数の値を扱う場合&quot;" data-v-fc87a946>​</a></h3><h4 id="promiseでは不可能" tabindex="-1" data-v-fc87a946>Promiseでは不可能 <a class="header-anchor" href="#promiseでは不可能" aria-label="Permalink to &quot;Promiseでは不可能&quot;" data-v-fc87a946>​</a></h4><div class="language-ts vp-adaptive-theme" data-v-fc87a946><button title="Copy Code" class="copy" data-v-fc87a946></button><span class="lang" data-v-fc87a946>ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-fc87a946><code data-v-fc87a946><span class="line" data-v-fc87a946><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>// Promiseは単一の値しか返せない</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946> promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-fc87a946>resolve</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> {</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>  resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>);</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>  resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946>2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>// この値は無視される</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>  resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946>3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>// この値も無視される</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>});</span></span>
<span class="line" data-v-fc87a946></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>promise.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-fc87a946>value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(value));</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>// 出力: 1（最初の値のみ）</span></span></code></pre></div><h4 id="rxjsでは可能" tabindex="-1" data-v-fc87a946>RxJSでは可能 <a class="header-anchor" href="#rxjsでは可能" aria-label="Permalink to &quot;RxJSでは可能&quot;" data-v-fc87a946>​</a></h4><div class="language-ts vp-adaptive-theme" data-v-fc87a946><button title="Copy Code" class="copy" data-v-fc87a946></button><span class="lang" data-v-fc87a946>ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-fc87a946><code data-v-fc87a946><span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> { Observable } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946> &#39;rxjs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>;</span></span>
<span class="line" data-v-fc87a946></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>// Observableは複数の値を発行できる</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946> observable$</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946> Observable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-fc87a946>subscriber</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> {</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>  subscriber.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>next</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>);</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>  subscriber.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>next</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946>2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>);</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>  subscriber.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>next</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946>3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>);</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>  subscriber.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>complete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>();</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>});</span></span>
<span class="line" data-v-fc87a946></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>observable$.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>subscribe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-fc87a946>value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(value));</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>// 出力: 1, 2, 3</span></span></code></pre></div><h2 id="キャンセルの比較" tabindex="-1" data-v-fc87a946>キャンセルの比較 <a class="header-anchor" href="#キャンセルの比較" aria-label="Permalink to &quot;キャンセルの比較&quot;" data-v-fc87a946>​</a></h2><h3 id="promise-キャンセル不可" tabindex="-1" data-v-fc87a946>Promise（キャンセル不可） <a class="header-anchor" href="#promise-キャンセル不可" aria-label="Permalink to &quot;Promise（キャンセル不可）&quot;" data-v-fc87a946>​</a></h3><div class="language-ts vp-adaptive-theme" data-v-fc87a946><button title="Copy Code" class="copy" data-v-fc87a946></button><span class="lang" data-v-fc87a946>ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-fc87a946><code data-v-fc87a946><span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946> promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-fc87a946>resolve</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> {</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>  setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946> resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946>&#39;完了&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946>3000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>);</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>});</span></span>
<span class="line" data-v-fc87a946></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>promise.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-fc87a946>result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(result));</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>// この処理をキャンセルする標準的な方法はない</span></span></code></pre></div><h3 id="rxjs-キャンセル可能" tabindex="-1" data-v-fc87a946>RxJS（キャンセル可能） <a class="header-anchor" href="#rxjs-キャンセル可能" aria-label="Permalink to &quot;RxJS（キャンセル可能）&quot;" data-v-fc87a946>​</a></h3><div class="language-ts vp-adaptive-theme" data-v-fc87a946><button title="Copy Code" class="copy" data-v-fc87a946></button><span class="lang" data-v-fc87a946>ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-fc87a946><code data-v-fc87a946><span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> { timer } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946> &#39;rxjs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>;</span></span>
<span class="line" data-v-fc87a946></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946> subscription</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946> timer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946>3000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>subscribe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>  () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946>&#39;完了&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>)</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>);</span></span>
<span class="line" data-v-fc87a946></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>// 1秒後にキャンセル</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> {</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>  subscription.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>unsubscribe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>// キャンセル</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946>&#39;キャンセルしました&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>);</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946>1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>);</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>// 出力: キャンセルしました（「完了」は出力されない）</span></span></code></pre></div><h2 id="どちらを選ぶべきか" tabindex="-1" data-v-fc87a946>どちらを選ぶべきか <a class="header-anchor" href="#どちらを選ぶべきか" aria-label="Permalink to &quot;どちらを選ぶべきか&quot;" data-v-fc87a946>​</a></h2><h3 id="promiseを選ぶべき場合" tabindex="-1" data-v-fc87a946>Promiseを選ぶべき場合 <a class="header-anchor" href="#promiseを選ぶべき場合" aria-label="Permalink to &quot;Promiseを選ぶべき場合&quot;" data-v-fc87a946>​</a></h3><p data-v-fc87a946>以下の条件に当てはまる場合は、Promiseが適しています。</p><table tabindex="0" data-v-fc87a946><thead data-v-fc87a946><tr data-v-fc87a946><th data-v-fc87a946>条件</th><th data-v-fc87a946>理由</th></tr></thead><tbody data-v-fc87a946><tr data-v-fc87a946><td data-v-fc87a946>単一の非同期処理</td><td data-v-fc87a946>APIリクエスト1回、ファイル読み込み1回など</td></tr><tr data-v-fc87a946><td data-v-fc87a946>シンプルなワークフロー</td><td data-v-fc87a946><code data-v-fc87a946>Promise.all</code>, <code data-v-fc87a946>Promise.race</code>で十分</td></tr><tr data-v-fc87a946><td data-v-fc87a946>小規模プロジェクト</td><td data-v-fc87a946>依存関係を最小限にしたい</td></tr><tr data-v-fc87a946><td data-v-fc87a946>標準APIのみ使用</td><td data-v-fc87a946>外部ライブラリを避けたい</td></tr><tr data-v-fc87a946><td data-v-fc87a946>初心者向けコード</td><td data-v-fc87a946>学習コストを抑えたい</td></tr></tbody></table><h4 id="具体例" tabindex="-1" data-v-fc87a946>具体例 <a class="header-anchor" href="#具体例" aria-label="Permalink to &quot;具体例&quot;" data-v-fc87a946>​</a></h4><div class="language-ts vp-adaptive-theme" data-v-fc87a946><button title="Copy Code" class="copy" data-v-fc87a946></button><span class="lang" data-v-fc87a946>ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-fc87a946><code data-v-fc87a946><span class="line" data-v-fc87a946><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>// 単一のAPIリクエスト</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946> getUserData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-fc87a946>userId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>User</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>&gt; {</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946> fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946>\`/api/users/\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>userId</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946>}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>);</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>response.ok) {</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>    throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946> Error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946>&#39;ユーザーデータの取得に失敗しました&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>);</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>  }</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> response.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>();</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>}</span></span>
<span class="line" data-v-fc87a946></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>// 複数の非同期処理を並列実行</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946> loadAllData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>&lt;[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>User</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>[], </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>Post</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>[]]&gt; {</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946>users</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946>posts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>([</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>    fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946>&#39;/api/users&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-fc87a946>r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> r.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>()),</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>    fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946>&#39;/api/posts&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-fc87a946>r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> r.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>())</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>  ]);</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> [users, posts];</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>}</span></span></code></pre></div><h3 id="rxjsを選ぶべき場合" tabindex="-1" data-v-fc87a946>RxJSを選ぶべき場合 <a class="header-anchor" href="#rxjsを選ぶべき場合" aria-label="Permalink to &quot;RxJSを選ぶべき場合&quot;" data-v-fc87a946>​</a></h3><p data-v-fc87a946>以下の条件に当てはまる場合は、RxJSが適しています。</p><table tabindex="0" data-v-fc87a946><thead data-v-fc87a946><tr data-v-fc87a946><th data-v-fc87a946>条件</th><th data-v-fc87a946>理由</th></tr></thead><tbody data-v-fc87a946><tr data-v-fc87a946><td data-v-fc87a946>連続的なイベント処理</td><td data-v-fc87a946>マウス移動、キーボード入力、WebSocketなど</td></tr><tr data-v-fc87a946><td data-v-fc87a946>複雑なストリーム処理</td><td data-v-fc87a946>複数のイベントソースの結合や変換</td></tr><tr data-v-fc87a946><td data-v-fc87a946>キャンセルが必要</td><td data-v-fc87a946>リソース管理を細かく制御したい</td></tr><tr data-v-fc87a946><td data-v-fc87a946>リトライ・タイムアウト</td><td data-v-fc87a946>エラー処理を柔軟に行いたい</td></tr><tr data-v-fc87a946><td data-v-fc87a946>Angularプロジェクト</td><td data-v-fc87a946>RxJSがフレームワークに統合されている</td></tr><tr data-v-fc87a946><td data-v-fc87a946>リアルタイムデータ</td><td data-v-fc87a946>データが継続的に更新される</td></tr></tbody></table><h4 id="具体例-1" tabindex="-1" data-v-fc87a946>具体例 <a class="header-anchor" href="#具体例-1" aria-label="Permalink to &quot;具体例&quot;" data-v-fc87a946>​</a></h4><div class="language-ts vp-adaptive-theme" data-v-fc87a946><button title="Copy Code" class="copy" data-v-fc87a946></button><span class="lang" data-v-fc87a946>ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-fc87a946><code data-v-fc87a946><span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> { fromEvent } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946> &#39;rxjs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>;</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> { debounceTime, map, distinctUntilChanged, switchMap } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946> &#39;rxjs/operators&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>;</span></span>
<span class="line" data-v-fc87a946></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>// リアルタイム検索（オートコンプリート）</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946> searchInput</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>querySelector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>HTMLInputElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>&gt;(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946>&#39;#search&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>as</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946> HTMLInputElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>;</span></span>
<span class="line" data-v-fc87a946></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>fromEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(searchInput, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946>&#39;input&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>pipe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>  map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-fc87a946>event</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> (event.target </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>as</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946> HTMLInputElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>).value),</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>  debounceTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946>300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>),              </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>// 300ms待ってから処理</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>  distinctUntilChanged</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(),         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>// 値が変わった時だけ処理</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>  switchMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-fc87a946>query</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>              // 最新のリクエストのみ実行</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>    fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946>\`/api/search?q=\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>query</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946>}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-fc87a946>r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> r.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>())</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>  )</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>subscribe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-fc87a946>results</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> {</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946>&#39;検索結果:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>, results);</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>});</span></span></code></pre></div><p data-v-fc87a946>この処理をPromiseだけで実装するのは非常に困難です。</p><h2 id="promiseとrxjsの相互運用" tabindex="-1" data-v-fc87a946>PromiseとRxJSの相互運用 <a class="header-anchor" href="#promiseとrxjsの相互運用" aria-label="Permalink to &quot;PromiseとRxJSの相互運用&quot;" data-v-fc87a946>​</a></h2><p data-v-fc87a946>PromiseとRxJSは相互に変換できます。</p><h3 id="promiseをobservableに変換" tabindex="-1" data-v-fc87a946>PromiseをObservableに変換 <a class="header-anchor" href="#promiseをobservableに変換" aria-label="Permalink to &quot;PromiseをObservableに変換&quot;" data-v-fc87a946>​</a></h3><div class="language-ts vp-adaptive-theme" data-v-fc87a946><button title="Copy Code" class="copy" data-v-fc87a946></button><span class="lang" data-v-fc87a946>ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-fc87a946><code data-v-fc87a946><span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> { from } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946> &#39;rxjs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>;</span></span>
<span class="line" data-v-fc87a946></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>// Promiseを作成</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946> promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946> fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946>&#39;https://api.example.com/data&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>)</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-fc87a946>response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> response.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>());</span></span>
<span class="line" data-v-fc87a946></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>// from()でObservableに変換</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946> observable$</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(promise);</span></span>
<span class="line" data-v-fc87a946></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>observable$.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>subscribe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>({</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>  next</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-fc87a946>data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946>&#39;データ:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>, data),</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>  error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-fc87a946>error</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946>&#39;エラー:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>, error),</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>  complete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>: () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946>&#39;完了&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>)</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>});</span></span></code></pre></div><h3 id="observableをpromiseに変換" tabindex="-1" data-v-fc87a946>ObservableをPromiseに変換 <a class="header-anchor" href="#observableをpromiseに変換" aria-label="Permalink to &quot;ObservableをPromiseに変換&quot;" data-v-fc87a946>​</a></h3><div class="language-ts vp-adaptive-theme" data-v-fc87a946><button title="Copy Code" class="copy" data-v-fc87a946></button><span class="lang" data-v-fc87a946>ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-fc87a946><code data-v-fc87a946><span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> { of, firstValueFrom, lastValueFrom } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946> &#39;rxjs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>;</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> { delay } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946> &#39;rxjs/operators&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>;</span></span>
<span class="line" data-v-fc87a946></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946> observable$</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946> of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946>2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946>3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>pipe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946>1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>));</span></span>
<span class="line" data-v-fc87a946></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>// 最初の値をPromiseとして取得</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946> firstValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946> firstValueFrom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(observable$);</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(firstValue); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>// 1</span></span>
<span class="line" data-v-fc87a946></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>// 最後の値をPromiseとして取得</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946> lastValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946> lastValueFrom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(observable$);</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(lastValue); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>// 3</span></span></code></pre></div><div class="warning custom-block github-alert" data-v-fc87a946><p class="custom-block-title" data-v-fc87a946>WARNING</p><p data-v-fc87a946><code data-v-fc87a946>toPromise()</code>は非推奨です。代わりに<code data-v-fc87a946>firstValueFrom()</code>または<code data-v-fc87a946>lastValueFrom()</code>を使用してください。</p></div><h2 id="実践例-両者を組み合わせる" tabindex="-1" data-v-fc87a946>実践例：両者を組み合わせる <a class="header-anchor" href="#実践例-両者を組み合わせる" aria-label="Permalink to &quot;実践例：両者を組み合わせる&quot;" data-v-fc87a946>​</a></h2><p data-v-fc87a946>実際のアプリケーションでは、PromiseとRxJSを組み合わせて使用することが一般的です。</p><div class="language-ts vp-adaptive-theme" data-v-fc87a946><button title="Copy Code" class="copy" data-v-fc87a946></button><span class="lang" data-v-fc87a946>ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-fc87a946><code data-v-fc87a946><span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> { fromEvent, from } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946> &#39;rxjs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>;</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> { debounceTime, switchMap, catchError } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946> &#39;rxjs/operators&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>;</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> { of } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946> &#39;rxjs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>;</span></span>
<span class="line" data-v-fc87a946></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946> SearchResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> {</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-fc87a946>  items</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>[];</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>}</span></span>
<span class="line" data-v-fc87a946></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>// Promise ベースのAPI関数</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946> searchAPI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-fc87a946>query</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>SearchResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>&gt; {</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946> fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946>\`/api/search?q=\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>query</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946>}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>);</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>response.ok) {</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>    throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946> Error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946>&#39;検索に失敗しました&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>);</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>  }</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> response.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>();</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>}</span></span>
<span class="line" data-v-fc87a946></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>// RxJSでイベントストリームを管理</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946> searchInput</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>querySelector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>HTMLInputElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>&gt;(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946>&#39;#search&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>;</span></span>
<span class="line" data-v-fc87a946></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>fromEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(searchInput, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946>&#39;input&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>pipe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>  debounceTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946>300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>),</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>  switchMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-fc87a946>event</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> {</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-fc87a946> query</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> (event.target </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>as</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946> HTMLInputElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>).value;</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>    // Promise関数をObservableに変換</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>    return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>searchAPI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(query));</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>  }),</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>  catchError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-fc87a946>error</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> {</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(error);</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946>    return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946> of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>({ items: [] }); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-fc87a946>// エラー時は空の結果を返す</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>  })</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>subscribe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-fc87a946>result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-fc87a946> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946> {</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-fc87a946>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-fc87a946>&#39;検索結果:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>, result.items);</span></span>
<span class="line" data-v-fc87a946><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-fc87a946>});</span></span></code></pre></div><h4 id="この例では" tabindex="-1" data-v-fc87a946>この例では <a class="header-anchor" href="#この例では" aria-label="Permalink to &quot;この例では&quot;" data-v-fc87a946>​</a></h4><ul data-v-fc87a946><li data-v-fc87a946>RxJSがユーザー入力イベントの制御を担当（debounce、switchMapなど）</li><li data-v-fc87a946>Promise（async/await）がHTTPリクエストを担当</li><li data-v-fc87a946><code data-v-fc87a946>from()</code>で両者を橋渡し</li></ul><h2 id="メリットとデメリット" tabindex="-1" data-v-fc87a946>メリットとデメリット <a class="header-anchor" href="#メリットとデメリット" aria-label="Permalink to &quot;メリットとデメリット&quot;" data-v-fc87a946>​</a></h2><h3 id="promise-1" tabindex="-1" data-v-fc87a946>Promise <a class="header-anchor" href="#promise-1" aria-label="Permalink to &quot;Promise&quot;" data-v-fc87a946>​</a></h3><div class="comparison-cards" data-v-fc87a946><div class="tip custom-block" data-v-fc87a946><p class="custom-block-title" data-v-fc87a946>メリット</p><ul data-v-fc87a946><li data-v-fc87a946>JavaScript標準のため依存関係不要</li><li data-v-fc87a946><code data-v-fc87a946>async/await</code>により直感的で読みやすいコード</li><li data-v-fc87a946>学習コストが低い</li><li data-v-fc87a946>単一タスクの処理がシンプル</li></ul></div><div class="danger custom-block" data-v-fc87a946><p class="custom-block-title" data-v-fc87a946>デメリット</p><ul data-v-fc87a946><li data-v-fc87a946>複数の値を扱えない</li><li data-v-fc87a946>キャンセル機能がない</li><li data-v-fc87a946>連続的なストリーム処理には不向き</li><li data-v-fc87a946>複雑なイベント処理が困難</li></ul></div></div><h3 id="rxjs-1" tabindex="-1" data-v-fc87a946>RxJS <a class="header-anchor" href="#rxjs-1" aria-label="Permalink to &quot;RxJS&quot;" data-v-fc87a946>​</a></h3><div class="comparison-cards" data-v-fc87a946><div class="tip custom-block" data-v-fc87a946><p class="custom-block-title" data-v-fc87a946>メリット</p><ul data-v-fc87a946><li data-v-fc87a946>複数の値を時系列で扱える</li><li data-v-fc87a946>豊富なオペレーターで複雑な処理が可能</li><li data-v-fc87a946>キャンセル（<code data-v-fc87a946>unsubscribe</code>）が簡単</li><li data-v-fc87a946>エラー処理やリトライを柔軟に実装可能</li><li data-v-fc87a946>宣言的でテストしやすい</li></ul></div><div class="danger custom-block" data-v-fc87a946><p class="custom-block-title" data-v-fc87a946>デメリット</p><ul data-v-fc87a946><li data-v-fc87a946>学習コストが高い</li><li data-v-fc87a946>ライブラリへの依存が必要</li><li data-v-fc87a946>オーバーヘッドがある（小規模プロジェクトでは過剰）</li><li data-v-fc87a946>デバッグが難しい場合がある</li></ul></div></div><h2 id="rxjsが特に活躍する分野" tabindex="-1" data-v-fc87a946>RxJSが特に活躍する分野 <a class="header-anchor" href="#rxjsが特に活躍する分野" aria-label="Permalink to &quot;RxJSが特に活躍する分野&quot;" data-v-fc87a946>​</a></h2><p data-v-fc87a946>RxJSは以下のような分野で特に強力です。Promiseだけでは実現が困難な複雑な要件を、エレガントに解決できます。</p><table tabindex="0" data-v-fc87a946><thead data-v-fc87a946><tr data-v-fc87a946><th data-v-fc87a946>分野</th><th data-v-fc87a946>具体例</th><th data-v-fc87a946>Promiseとの比較</th></tr></thead><tbody data-v-fc87a946><tr data-v-fc87a946><td data-v-fc87a946><strong data-v-fc87a946>リアルタイム通信</strong></td><td data-v-fc87a946>WebSocket、SSE、チャット、株価更新</td><td data-v-fc87a946>Promiseは単発の通信のみ。連続的なメッセージ処理には不向き</td></tr><tr data-v-fc87a946><td data-v-fc87a946><strong data-v-fc87a946>ユーザー入力制御</strong></td><td data-v-fc87a946>検索オートコンプリート、フォームバリデーション</td><td data-v-fc87a946>debounce、distinctUntilChangedなどが標準装備</td></tr><tr data-v-fc87a946><td data-v-fc87a946><strong data-v-fc87a946>複数ソースの結合</strong></td><td data-v-fc87a946>検索条件×ソート順×フィルタの組み合わせ</td><td data-v-fc87a946>combineLatest、withLatestFromで簡潔に記述可能</td></tr><tr data-v-fc87a946><td data-v-fc87a946><strong data-v-fc87a946>オフライン対応</strong></td><td data-v-fc87a946>PWA、ネットワーク状態監視、自動再同期</td><td data-v-fc87a946>retry、retryWhenで柔軟なリトライ制御</td></tr><tr data-v-fc87a946><td data-v-fc87a946><strong data-v-fc87a946>ストリーミングAPI</strong></td><td data-v-fc87a946>OpenAI、AI応答のトークン逐次出力</td><td data-v-fc87a946>連続データをリアルタイムで処理可能</td></tr><tr data-v-fc87a946><td data-v-fc87a946><strong data-v-fc87a946>キャンセル制御</strong></td><td data-v-fc87a946>長時間処理の中断、古いリクエストの破棄</td><td data-v-fc87a946>unsubscribe()で即座にキャンセル可能</td></tr></tbody></table><div class="note custom-block github-alert" data-v-fc87a946><p class="custom-block-title" data-v-fc87a946>NOTE</p><p data-v-fc87a946>RxJSの活用分野の詳細は、<a href="./what-is-rxjs.html#ユースケース" data-v-fc87a946>RxJSとは何か - ユースケース</a>も参照してください。</p></div><h2 id="まとめ" tabindex="-1" data-v-fc87a946>まとめ <a class="header-anchor" href="#まとめ" aria-label="Permalink to &quot;まとめ&quot;" data-v-fc87a946>​</a></h2><table tabindex="0" data-v-fc87a946><thead data-v-fc87a946><tr data-v-fc87a946><th data-v-fc87a946>目的</th><th data-v-fc87a946>推奨</th></tr></thead><tbody data-v-fc87a946><tr data-v-fc87a946><td data-v-fc87a946>単一のHTTPリクエスト</td><td data-v-fc87a946>Promise（<code data-v-fc87a946>async/await</code>）</td></tr><tr data-v-fc87a946><td data-v-fc87a946>ユーザー入力イベントの処理</td><td data-v-fc87a946>RxJS</td></tr><tr data-v-fc87a946><td data-v-fc87a946>リアルタイムデータ（WebSocket）</td><td data-v-fc87a946>RxJS</td></tr><tr data-v-fc87a946><td data-v-fc87a946>複数の非同期処理の並列実行</td><td data-v-fc87a946>Promise（<code data-v-fc87a946>Promise.all</code>）</td></tr><tr data-v-fc87a946><td data-v-fc87a946>連続的なイベントストリーム</td><td data-v-fc87a946>RxJS</td></tr><tr data-v-fc87a946><td data-v-fc87a946>キャンセル可能な処理</td><td data-v-fc87a946>RxJS</td></tr><tr data-v-fc87a946><td data-v-fc87a946>シンプルなアプリケーション</td><td data-v-fc87a946>Promise</td></tr><tr data-v-fc87a946><td data-v-fc87a946>Angularアプリケーション</td><td data-v-fc87a946>RxJS</td></tr></tbody></table><h3 id="基本方針" tabindex="-1" data-v-fc87a946>基本方針 <a class="header-anchor" href="#基本方針" aria-label="Permalink to &quot;基本方針&quot;" data-v-fc87a946>​</a></h3><ul data-v-fc87a946><li data-v-fc87a946><strong data-v-fc87a946>シンプルに済むならPromise</strong>を使う</li><li data-v-fc87a946><strong data-v-fc87a946>複雑なストリーム処理が必要ならRxJS</strong>を使う</li><li data-v-fc87a946><strong data-v-fc87a946>両方を組み合わせる</strong>のも有効（<code data-v-fc87a946>from()</code>で橋渡し）</li></ul><p data-v-fc87a946>RxJSは強力ですが、すべての非同期処理にRxJSを使う必要はありません。適切なツールを適切な場面で使い分けることが重要です。</p><hr class="footnotes-sep" data-v-fc87a946><section class="footnotes" data-v-fc87a946><ol class="footnotes-list" data-v-fc87a946><li id="fn1" class="footnote-item" data-v-fc87a946><p data-v-fc87a946>AbortControllerを使えばPromiseベースの処理（fetchなど）のキャンセルは可能ですが、Promise自体の仕様にキャンセル機能はありません。 <a href="#fnref1" class="footnote-backref" data-v-fc87a946>↩︎</a></p></li></ol></section>`,62)]))}const f=s(d,[["render",h],["__scopeId","data-v-fc87a946"]]);export{v as __pageData,f as default};
