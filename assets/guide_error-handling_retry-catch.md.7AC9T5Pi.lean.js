import{_ as i,c as a,o as n,a2 as h}from"./chunks/framework.BvXV5w7a.js";const g=JSON.parse('{"title":"retry と catchError - 効果的なエラー処理の組み合わせ","description":"retryとcatchErrorオペレーターを組み合わせた堅牢なエラー処理戦略を解説します。一時的な障害の再試行、指数バックオフパターン、適切なフォールバック処理など実践的なAPIリクエストの例を通して学びます。","frontmatter":{"description":"retryとcatchErrorオペレーターを組み合わせた堅牢なエラー処理戦略を解説します。一時的な障害の再試行、指数バックオフパターン、適切なフォールバック処理など実践的なAPIリクエストの例を通して学びます。"},"headers":[],"relativePath":"guide/error-handling/retry-catch.md","filePath":"guide/error-handling/retry-catch.md"}'),k={name:"guide/error-handling/retry-catch.md"};function l(p,s,t,e,E,r){return n(),a("div",null,s[0]||(s[0]=[h("",39)]))}const y=i(k,[["render",l]]);export{g as __pageData,y as default};
