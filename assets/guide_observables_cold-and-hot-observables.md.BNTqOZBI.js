import{_ as s,c as i,o as t,a2 as n}from"./chunks/framework.BvXV5w7a.js";const v=JSON.parse('{"title":"コールドObservableとホットObservable","description":"Cold ObservableとHot Observableの違いを詳しく解説します。購読ごとのデータストリームの独立性、shareやshareReplayによるColdからHotへの変換方法、APIリクエストのキャッシュなど実践的な活用例を紹介します。","frontmatter":{"description":"Cold ObservableとHot Observableの違いを詳しく解説します。購読ごとのデータストリームの独立性、shareやshareReplayによるColdからHotへの変換方法、APIリクエストのキャッシュなど実践的な活用例を紹介します。"},"headers":[],"relativePath":"guide/observables/cold-and-hot-observables.md","filePath":"guide/observables/cold-and-hot-observables.md"}'),h={name:"guide/observables/cold-and-hot-observables.md"};function l(d,a,k,p,c,e){return t(),i("div",null,a[0]||(a[0]=[n(`<h1 id="コールドobservableとホットobservable" tabindex="-1" data-v-79544c2b>コールドObservableとホットObservable <a class="header-anchor" href="#コールドobservableとホットobservable" aria-label="Permalink to &quot;コールドObservableとホットObservable&quot;" data-v-79544c2b>​</a></h1><p data-v-79544c2b>RxJSを使用する上で重要な概念の一つが、「コールドObservable」と「ホットObservable」の区別です。この違いを理解することは、効率的なObservableの使い方を習得するために不可欠です。</p><h2 id="なぜcold-hotの理解が重要か" tabindex="-1" data-v-79544c2b>なぜCold/Hotの理解が重要か <a class="header-anchor" href="#なぜcold-hotの理解が重要か" aria-label="Permalink to &quot;なぜCold/Hotの理解が重要か&quot;" data-v-79544c2b>​</a></h2><p data-v-79544c2b>Cold/Hotの違いを理解していないと、以下のような問題に直面します。</p><ul data-v-79544c2b><li data-v-79544c2b><strong data-v-79544c2b>意図しない重複実行</strong> - API呼び出しが複数回実行される</li><li data-v-79544c2b><strong data-v-79544c2b>メモリリーク</strong> - 購読を適切に管理できない</li><li data-v-79544c2b><strong data-v-79544c2b>パフォーマンス問題</strong> - 不要な処理が繰り返される</li><li data-v-79544c2b><strong data-v-79544c2b>データ不整合</strong> - 期待したデータが受け取れない</li></ul><h2 id="cold-vs-hotの違い-比較表" tabindex="-1" data-v-79544c2b>Cold vs Hotの違い（比較表） <a class="header-anchor" href="#cold-vs-hotの違い-比較表" aria-label="Permalink to &quot;Cold vs Hotの違い（比較表）&quot;" data-v-79544c2b>​</a></h2><p data-v-79544c2b>まず、全体像を把握しましょう。</p><table tabindex="0" data-v-79544c2b><thead data-v-79544c2b><tr data-v-79544c2b><th data-v-79544c2b>比較項目</th><th data-v-79544c2b>Cold Observable</th><th data-v-79544c2b>Hot Observable</th></tr></thead><tbody data-v-79544c2b><tr data-v-79544c2b><td data-v-79544c2b><strong data-v-79544c2b>購読なしでの実行</strong></td><td data-v-79544c2b>実行されない（購読されて初めて実行）</td><td data-v-79544c2b>実行される（subscribeされなくとも値を流す）</td></tr><tr data-v-79544c2b><td data-v-79544c2b><strong data-v-79544c2b>データ発行タイミング</strong></td><td data-v-79544c2b><code data-v-79544c2b>subscribe()</code> された時に開始</td><td data-v-79544c2b>発行側のタイミングで開始（購読と無関係）</td></tr><tr data-v-79544c2b><td data-v-79544c2b><strong data-v-79544c2b>実行の再利用</strong></td><td data-v-79544c2b>毎回新たに実行される</td><td data-v-79544c2b>既存のストリームを複数で共有</td></tr><tr data-v-79544c2b><td data-v-79544c2b><strong data-v-79544c2b>データの一貫性</strong></td><td data-v-79544c2b>各購読で独立した値を受け取る</td><td data-v-79544c2b>途中から購読すると過去の値を受け取れない</td></tr><tr data-v-79544c2b><td data-v-79544c2b><strong data-v-79544c2b>主な使用例</strong></td><td data-v-79544c2b>HTTPリクエスト、非同期処理</td><td data-v-79544c2b>UIイベント、WebSocket、リアルタイム通信</td></tr><tr data-v-79544c2b><td data-v-79544c2b><strong data-v-79544c2b>使用場面</strong></td><td data-v-79544c2b>各処理が独立している場合</td><td data-v-79544c2b>状態共有、イベントブロードキャスト</td></tr></tbody></table><p data-v-79544c2b><strong data-v-79544c2b>判断基準：</strong> 各購読者に対して処理を再実行すべきか？それともストリームを共有すべきか？</p><h2 id="コールドobservable" tabindex="-1" data-v-79544c2b>コールドObservable <a class="header-anchor" href="#コールドobservable" aria-label="Permalink to &quot;コールドObservable&quot;" data-v-79544c2b>​</a></h2><h3 id="特徴" tabindex="-1" data-v-79544c2b>特徴 <a class="header-anchor" href="#特徴" aria-label="Permalink to &quot;特徴&quot;" data-v-79544c2b>​</a></h3><ul data-v-79544c2b><li data-v-79544c2b><strong data-v-79544c2b>購読されるたびに新しいデータストリームが作成される</strong></li><li data-v-79544c2b><strong data-v-79544c2b>購読されるまでデータの発行を開始しない（遅延実行）</strong></li><li data-v-79544c2b><strong data-v-79544c2b>すべてのサブスクライバーは、Observableの最初から全データを受け取る</strong></li></ul><p data-v-79544c2b>Cold Observableは、subscribeするたびに新しい実行コンテキストが生成されます。 これはHTTPリクエストや非同期処理など、毎回新しい処理が必要な場合に適しています。</p><h3 id="コード例" tabindex="-1" data-v-79544c2b>コード例 <a class="header-anchor" href="#コード例" aria-label="Permalink to &quot;コード例&quot;" data-v-79544c2b>​</a></h3><div class="language-typescript vp-adaptive-theme" data-v-79544c2b><button title="Copy Code" class="copy" data-v-79544c2b></button><span class="lang" data-v-79544c2b>typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-79544c2b><code data-v-79544c2b><span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> { Observable } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> &#39;rxjs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>;</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// コールドObservableの例</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> cold$</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b> Observable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>&gt;(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-79544c2b>subscriber</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> {</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;データソースの作成 - 新しい購読&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>);</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> randomValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>random</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>();</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>  subscriber.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>next</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(randomValue);</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>  subscriber.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>complete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>();</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>});</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// 1回目の購読</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;--- 1回目の購読 ---&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>);</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>cold$.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>subscribe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-79544c2b>value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;購読者1:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>, value));</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// 2回目の購読（異なるデータが生成される）</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;--- 2回目の購読 ---&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>);</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>cold$.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>subscribe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-79544c2b>value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;購読者2:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>, value));</span></span></code></pre></div><h4 id="実行結果" tabindex="-1" data-v-79544c2b>実行結果 <a class="header-anchor" href="#実行結果" aria-label="Permalink to &quot;実行結果&quot;" data-v-79544c2b>​</a></h4><div class="language-sh vp-adaptive-theme" data-v-79544c2b><button title="Copy Code" class="copy" data-v-79544c2b></button><span class="lang" data-v-79544c2b>sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-79544c2b><code data-v-79544c2b><span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>---</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> 1回目の購読</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> ---</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>データソースの作成</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> 新しい購読</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>購読者1:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> 0.259632...</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>---</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> 2回目の購読</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> ---</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>データソースの作成</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> 新しい購読</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>  ←</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> 再実行される</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>購読者2:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> 0.744322...</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>  ←</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> 異なる値</span></span></code></pre></div><div class="tip custom-block github-alert" data-v-79544c2b><p class="custom-block-title" data-v-79544c2b>重要なポイント</p><p data-v-79544c2b>購読するたびに「データソースの作成」が実行され、異なる値が生成されます。</p></div><h3 id="よくあるコールドobservable-見分け方" tabindex="-1" data-v-79544c2b>よくあるコールドObservable（見分け方） <a class="header-anchor" href="#よくあるコールドobservable-見分け方" aria-label="Permalink to &quot;よくあるコールドObservable（見分け方）&quot;" data-v-79544c2b>​</a></h3><p data-v-79544c2b>以下のObservableは通常Coldです。</p><div class="language-typescript vp-adaptive-theme" data-v-79544c2b><button title="Copy Code" class="copy" data-v-79544c2b></button><span class="lang" data-v-79544c2b>typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-79544c2b><code data-v-79544c2b><span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> { of, from, interval, timer } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> &#39;rxjs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>;</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> { ajax } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> &#39;rxjs/ajax&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>;</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// Creation Functions</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>)                    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// Cold</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>])                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// Cold</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;/api/data&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>))       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// Cold</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// 時間オペレーター</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>interval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>)                 </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// Cold</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>timer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>)                    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// Cold</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// HTTP リクエスト</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>ajax</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;/api/users&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>)             </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// Cold</span></span></code></pre></div><div class="tip custom-block github-alert" data-v-79544c2b><p class="custom-block-title" data-v-79544c2b>ルール</p><p data-v-79544c2b>Creation Functions、時間オペレーター、HTTPリクエストは基本的にCold</p></div><h2 id="ホットobservable" tabindex="-1" data-v-79544c2b>ホットObservable <a class="header-anchor" href="#ホットobservable" aria-label="Permalink to &quot;ホットObservable&quot;" data-v-79544c2b>​</a></h2><h3 id="特徴-1" tabindex="-1" data-v-79544c2b>特徴 <a class="header-anchor" href="#特徴-1" aria-label="Permalink to &quot;特徴&quot;" data-v-79544c2b>​</a></h3><ul data-v-79544c2b><li data-v-79544c2b><strong data-v-79544c2b>subscribeされなくとも値を流す（購読の有無に関わらず実行される）</strong></li><li data-v-79544c2b><strong data-v-79544c2b>購読を開始した時点以降のデータのみを受け取る</strong></li><li data-v-79544c2b><strong data-v-79544c2b>一つのデータソースが複数のサブスクライバーに共有される</strong></li></ul><p data-v-79544c2b>Hot Observableは、ストリームの発行タイミングが購読とは無関係であり、購読者は途中から参加することになります。</p><h3 id="コード例-1" tabindex="-1" data-v-79544c2b>コード例 <a class="header-anchor" href="#コード例-1" aria-label="Permalink to &quot;コード例&quot;" data-v-79544c2b>​</a></h3><div class="language-typescript vp-adaptive-theme" data-v-79544c2b><button title="Copy Code" class="copy" data-v-79544c2b></button><span class="lang" data-v-79544c2b>typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-79544c2b><code data-v-79544c2b><span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> { Subject } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> &#39;rxjs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>;</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// ホットObservableの例（Subject使用）</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> hot$</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b> Subject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>&gt;();</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// 最初の購読</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;--- 購読者1 開始 ---&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>);</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>hot$.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>subscribe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-79544c2b>value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;購読者1:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>, value));</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// データ発行</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>hot$.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>next</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>);</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>hot$.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>next</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>);</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// 2番目の購読（後からの購読）</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;--- 購読者2 開始 ---&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>);</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>hot$.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>subscribe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-79544c2b>value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;購読者2:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>, value));</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// さらにデータ発行</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>hot$.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>next</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>);</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>hot$.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>next</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>);</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>hot$.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>complete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>();</span></span></code></pre></div><h4 id="実行結果-1" tabindex="-1" data-v-79544c2b>実行結果 <a class="header-anchor" href="#実行結果-1" aria-label="Permalink to &quot;実行結果&quot;" data-v-79544c2b>​</a></h4><div class="language-sh vp-adaptive-theme" data-v-79544c2b><button title="Copy Code" class="copy" data-v-79544c2b></button><span class="lang" data-v-79544c2b>sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-79544c2b><code data-v-79544c2b><span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>---</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> 購読者1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> 開始</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> ---</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>購読者1:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> 1</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>購読者1:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> 2</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>---</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> 購読者2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> 開始</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> ---</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>購読者1:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> 3</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>購読者2:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> 3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>  ←</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> 購読2は3から参加（1,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> 2は受け取れない）</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>購読者1:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> 4</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>購読者2:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> 4</span></span></code></pre></div><div class="tip custom-block github-alert" data-v-79544c2b><p class="custom-block-title" data-v-79544c2b>重要なポイント</p><p data-v-79544c2b>購読者2は途中から参加したため、過去の値（1, 2）は受け取れません。</p></div><h3 id="よくあるホットobservable-見分け方" tabindex="-1" data-v-79544c2b>よくあるホットObservable（見分け方） <a class="header-anchor" href="#よくあるホットobservable-見分け方" aria-label="Permalink to &quot;よくあるホットObservable（見分け方）&quot;" data-v-79544c2b>​</a></h3><p data-v-79544c2b>以下のObservableは常にHotです。</p><div class="language-typescript vp-adaptive-theme" data-v-79544c2b><button title="Copy Code" class="copy" data-v-79544c2b></button><span class="lang" data-v-79544c2b>typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-79544c2b><code data-v-79544c2b><span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> { Subject, BehaviorSubject, ReplaySubject, fromEvent } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> &#39;rxjs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>;</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> { webSocket } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> &#39;rxjs/webSocket&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>;</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// Subject系</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b> Subject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>()                  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// Hot</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b> BehaviorSubject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>)         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// Hot</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b> ReplaySubject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>)           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// Hot</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// DOM イベント</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>fromEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(button, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;click&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>)     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// Hot</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>fromEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(window, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;resize&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>)    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// Hot</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// WebSocket</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>webSocket</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;ws://localhost:8080&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// Hot</span></span></code></pre></div><div class="tip custom-block github-alert" data-v-79544c2b><p class="custom-block-title" data-v-79544c2b>ルール</p><p data-v-79544c2b>Subject系、DOMイベント、WebSocketは常にHot</p></div><h2 id="コールドobservableをホットに変換する方法" tabindex="-1" data-v-79544c2b>コールドObservableをホットに変換する方法 <a class="header-anchor" href="#コールドobservableをホットに変換する方法" aria-label="Permalink to &quot;コールドObservableをホットに変換する方法&quot;" data-v-79544c2b>​</a></h2><p data-v-79544c2b>RxJSでは、Cold ObservableをHotに変換する手段として主に以下が使われます。</p><ul data-v-79544c2b><li data-v-79544c2b><code data-v-79544c2b>share()</code> - 簡易ホット化（推奨）</li><li data-v-79544c2b><code data-v-79544c2b>shareReplay()</code> - 過去の値をキャッシュしてホット化</li><li data-v-79544c2b><s data-v-79544c2b><code data-v-79544c2b>multicast()</code></s> - 非推奨（RxJS v7で非推奨、v8で削除）</li></ul><h3 id="share-オペレーター" tabindex="-1" data-v-79544c2b>share()オペレーター <a class="header-anchor" href="#share-オペレーター" aria-label="Permalink to &quot;share()オペレーター&quot;" data-v-79544c2b>​</a></h3><p data-v-79544c2b><code data-v-79544c2b>share()</code>は、コールドObservableをホットObservableに変換する最も一般的な方法です。</p><div class="language-typescript vp-adaptive-theme" data-v-79544c2b><button title="Copy Code" class="copy" data-v-79544c2b></button><span class="lang" data-v-79544c2b>typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-79544c2b><code data-v-79544c2b><span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> { interval } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> &#39;rxjs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>;</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> { share, take } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> &#39;rxjs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>;</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// HTTP呼び出しをシミュレート</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b> makeHttpRequest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> {</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;HTTP呼び出し実行!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>);</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>  return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b> interval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>pipe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>take</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>));</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>};</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// ❌ コールドObservable（共有なし）</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> cold$</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b> makeHttpRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>();</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>cold$.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>subscribe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-79544c2b>val</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;購読者1:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>, val));</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>cold$.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>subscribe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-79544c2b>val</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;購読者2:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>, val));</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// → HTTP呼び出しが2回実行される</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// ✅ ホットObservable（share使用）</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> shared$</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b> makeHttpRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>pipe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>share</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>());</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>shared$.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>subscribe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-79544c2b>val</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;共有購読者1:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>, val));</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>shared$.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>subscribe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-79544c2b>val</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;共有購読者2:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>, val));</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// → HTTP呼び出しは1回だけ、結果を共有</span></span></code></pre></div><p data-v-79544c2b><strong data-v-79544c2b>実行結果（Cold）：</strong></p><div class="language-sh vp-adaptive-theme" data-v-79544c2b><button title="Copy Code" class="copy" data-v-79544c2b></button><span class="lang" data-v-79544c2b>sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-79544c2b><code data-v-79544c2b><span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>HTTP呼び出し実行!</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>  ←</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> 1回目</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>購読者1:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> 0</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>HTTP呼び出し実行!</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>  ←</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> 2回目（重複！）</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>購読者2:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> 0</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>...</span></span></code></pre></div><p data-v-79544c2b><strong data-v-79544c2b>実行結果（Hot）：</strong></p><div class="language-sh vp-adaptive-theme" data-v-79544c2b><button title="Copy Code" class="copy" data-v-79544c2b></button><span class="lang" data-v-79544c2b>sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-79544c2b><code data-v-79544c2b><span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>HTTP呼び出し実行!</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>  ←</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> 1回だけ</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>共有購読者1:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> 0</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>共有購読者2:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>  ←</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> 同じストリームを共有</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>...</span></span></code></pre></div><div class="note custom-block github-alert" data-v-79544c2b><p class="custom-block-title" data-v-79544c2b>ユースケース</p><p data-v-79544c2b></p><ul data-v-79544c2b><li data-v-79544c2b>複数コンポーネントで同じAPI結果を使う</li><li data-v-79544c2b>副作用（HTTP呼び出しなど）の重複を避ける</li></ul></div><h3 id="sharereplay-オペレーター" tabindex="-1" data-v-79544c2b>shareReplay()オペレーター <a class="header-anchor" href="#sharereplay-オペレーター" aria-label="Permalink to &quot;shareReplay()オペレーター&quot;" data-v-79544c2b>​</a></h3><p data-v-79544c2b><code data-v-79544c2b>shareReplay()</code>は<code data-v-79544c2b>share()</code>の拡張版で、<strong data-v-79544c2b>過去の値をキャッシュ</strong>して新しいサブスクライバーに再生します。</p><div class="language-typescript vp-adaptive-theme" data-v-79544c2b><button title="Copy Code" class="copy" data-v-79544c2b></button><span class="lang" data-v-79544c2b>typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-79544c2b><code data-v-79544c2b><span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> { interval } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> &#39;rxjs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>;</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> { shareReplay, take } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> &#39;rxjs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>;</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> request$</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b> interval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>pipe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>  take</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>),</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>  shareReplay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// 最後の2つの値をキャッシュ</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>);</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// 1回目の購読</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>request$.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>subscribe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-79544c2b>val</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;購読者1:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>, val));</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// 3.5秒後に2回目の購読（ストリーム完了後）</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> {</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;--- 購読者2開始（完了後） ---&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>);</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>  request$.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>subscribe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-79544c2b>val</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;購読者2:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>, val));</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>3500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>);</span></span></code></pre></div><h4 id="実行結果-2" tabindex="-1" data-v-79544c2b>実行結果 <a class="header-anchor" href="#実行結果-2" aria-label="Permalink to &quot;実行結果&quot;" data-v-79544c2b>​</a></h4><div class="language-sh vp-adaptive-theme" data-v-79544c2b><button title="Copy Code" class="copy" data-v-79544c2b></button><span class="lang" data-v-79544c2b>sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-79544c2b><code data-v-79544c2b><span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>購読者1:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> 0</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>購読者1:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> 1</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>購読者1:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> 2</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>---</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> 購読者2開始（完了後）</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> ---</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>購読者2:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>  ←</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> キャッシュされた値（最後の2つ）</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>購読者2:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> 2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>  ←</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> キャッシュされた値</span></span></code></pre></div><div class="note custom-block github-alert" data-v-79544c2b><p class="custom-block-title" data-v-79544c2b>ユースケース</p><p data-v-79544c2b></p><ul data-v-79544c2b><li data-v-79544c2b>API結果のキャッシュ</li><li data-v-79544c2b>初期状態の共有（最新の1件のみキャッシュ）</li><li data-v-79544c2b>遅延購読者への過去データ提供</li></ul></div><div class="warning custom-block github-alert" data-v-79544c2b><p class="custom-block-title" data-v-79544c2b>shareReplayの注意点</p><p data-v-79544c2b><code data-v-79544c2b>shareReplay()</code>は購読が0になってもキャッシュを保持し続けるため、メモリリークの原因になることがあります。詳しくは <a href="/RxJS-with-TypeScript/guide/anti-patterns/common-mistakes.html#4-sharereplay-の誤用" data-v-79544c2b>Chapter 10: shareReplayの誤用</a> を参照してください。</p></div><h3 id="multicast-について" tabindex="-1" data-v-79544c2b>multicast()について <a class="header-anchor" href="#multicast-について" aria-label="Permalink to &quot;multicast()について&quot;" data-v-79544c2b>​</a></h3><div class="note custom-block github-alert" data-v-79544c2b><p class="custom-block-title" data-v-79544c2b>NOTE</p><p data-v-79544c2b><code data-v-79544c2b>multicast()</code> は柔軟ですが、RxJS v7で非推奨となり、v8で削除されました。現在は <code data-v-79544c2b>share()</code> や <code data-v-79544c2b>shareReplay()</code> を使用してください。詳しくは <a href="/RxJS-with-TypeScript/guide/operators/multicasting/share.html" data-v-79544c2b>share()オペレーター解説</a> を参照してください。</p></div><h2 id="実践的な例-apiキャッシュサービス" tabindex="-1" data-v-79544c2b>実践的な例: APIキャッシュサービス <a class="header-anchor" href="#実践的な例-apiキャッシュサービス" aria-label="Permalink to &quot;実践的な例: APIキャッシュサービス&quot;" data-v-79544c2b>​</a></h2><p data-v-79544c2b>実際のアプリケーションでよくあるパターン：複数のコンポーネントが同じAPIデータを必要とする場合。</p><div class="language-typescript vp-adaptive-theme" data-v-79544c2b><button title="Copy Code" class="copy" data-v-79544c2b></button><span class="lang" data-v-79544c2b>typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-79544c2b><code data-v-79544c2b><span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> { Observable, of, throwError } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> &#39;rxjs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>;</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> { catchError, shareReplay, delay, tap } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> &#39;rxjs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>;</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// シンプルなキャッシュサービス</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b> UserService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> {</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>  private</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-79544c2b> cache$</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b> Observable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>User</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>[]&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>;</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>  getUsers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b> Observable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>User</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>[]&gt; {</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>    // キャッシュがあればそれを返す</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>.cache$) {</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>      console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;キャッシュから返却&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>);</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>      return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>.cache$;</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>    }</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>    // 新しいリクエストを作成しキャッシュ</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;新規リクエスト実行&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>);</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>.cache$ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>fetchUsersFromAPI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>pipe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>      catchError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-79544c2b>err</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> {</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>        this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>.cache$ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// エラー時はキャッシュをクリア</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>        return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b> throwError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> err);</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>      }),</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>      shareReplay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// 最後の結果をキャッシュ</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>    );</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>.cache$;</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>  }</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>  private</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b> fetchUsersFromAPI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b> Observable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>User</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>[]&gt; {</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>    // 実際のAPIリクエストをシミュレート</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>    return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b> of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>([</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>      { id: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>, name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;山田太郎&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> },</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>      { id: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>, name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;佐藤花子&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> }</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>    ]).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>pipe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>      delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>),</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>      tap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;APIからデータ受信&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>))</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>    );</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>  }</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>  clearCache</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> {</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>.cache$ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>;</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;キャッシュクリア&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>);</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>  }</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>}</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b> User</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> {</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-79544c2b>  id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>;</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-79544c2b>  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>;</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>}</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// 使用例</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b> userService</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b> UserService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>();</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// コンポーネント1: データを要求</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>userService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>getUsers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>subscribe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-79544c2b>users</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b> =&gt;</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;コンポーネント1:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>, users)</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>);</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// コンポーネント2: 2秒後にデータを要求</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> {</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>  userService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>getUsers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>subscribe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-79544c2b>users</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b> =&gt;</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;コンポーネント2:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>, users)</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>  );</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>2000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>);</span></span>
<span class="line" data-v-79544c2b></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-79544c2b>// キャッシュをクリアして再度要求</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b>=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> {</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>  userService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>clearCache</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>();</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>  userService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>getUsers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>subscribe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-79544c2b>users</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-79544c2b> =&gt;</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>&#39;コンポーネント3:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>, users)</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>  );</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-79544c2b>4000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b>);</span></span></code></pre></div><h4 id="実行結果-3" tabindex="-1" data-v-79544c2b>実行結果 <a class="header-anchor" href="#実行結果-3" aria-label="Permalink to &quot;実行結果&quot;" data-v-79544c2b>​</a></h4><div class="language-sh vp-adaptive-theme" data-v-79544c2b><button title="Copy Code" class="copy" data-v-79544c2b></button><span class="lang" data-v-79544c2b>sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-79544c2b><code data-v-79544c2b><span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>新規リクエスト実行</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>APIからデータ受信</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>コンポーネント1:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> [{</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>id:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> 1,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> &#39;山田太郎&#39;},</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> {id:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> 2,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> &#39;佐藤花子&#39;}]</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>キャッシュから返却</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>  ←</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> API呼び出しなし</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>コンポーネント2:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> [{</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>id:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> 1,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> &#39;山田太郎&#39;},</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> {id:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> 2,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> &#39;佐藤花子&#39;}]</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>キャッシュクリア</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>新規リクエスト実行</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b>  ←</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> 再度API呼び出し</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>APIからデータ受信</span></span>
<span class="line" data-v-79544c2b><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>コンポーネント3:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-79544c2b> [{</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-79544c2b>id:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> 1,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> &#39;山田太郎&#39;},</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> {id:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> 2,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-79544c2b> &#39;佐藤花子&#39;}]</span></span></code></pre></div><p data-v-79544c2b><strong data-v-79544c2b>ポイント：</strong></p><ul data-v-79544c2b><li data-v-79544c2b><code data-v-79544c2b>shareReplay(1)</code>で最後のレスポンスをキャッシュ</li><li data-v-79544c2b>複数のコンポーネントがデータを共有（API呼び出しは1回のみ）</li><li data-v-79544c2b>エラー時やクリア時は適切にキャッシュを破棄</li></ul><h2 id="使用するタイミング" tabindex="-1" data-v-79544c2b>使用するタイミング <a class="header-anchor" href="#使用するタイミング" aria-label="Permalink to &quot;使用するタイミング&quot;" data-v-79544c2b>​</a></h2><div class="comparison-cards" data-v-79544c2b><div class="tip custom-block" data-v-79544c2b><p class="custom-block-title" data-v-79544c2b>コールド</p><h4 id="こんな時に使う" tabindex="-1" data-v-79544c2b>こんな時に使う <a class="header-anchor" href="#こんな時に使う" aria-label="Permalink to &quot;こんな時に使う&quot;" data-v-79544c2b>​</a></h4><ul data-v-79544c2b><li data-v-79544c2b>各サブスクライバーが独自のデータセットを必要とする場合</li><li data-v-79544c2b>新しく開始するプロセスやアクションを表現する場合</li><li data-v-79544c2b>副作用の重複が問題にならない場合</li></ul><h4 id="例" tabindex="-1" data-v-79544c2b>例 <a class="header-anchor" href="#例" aria-label="Permalink to &quot;例&quot;" data-v-79544c2b>​</a></h4><ul data-v-79544c2b><li data-v-79544c2b>フォーム送信のたびに新しいPOSTリクエストを送る</li><li data-v-79544c2b>ユーザーごとに異なるタイマーが必要</li><li data-v-79544c2b>各購読で独立した計算を実行</li></ul></div><div class="tip custom-block" data-v-79544c2b><p class="custom-block-title" data-v-79544c2b>ホット</p><h4 id="こんな時に使う-1" tabindex="-1" data-v-79544c2b>こんな時に使う <a class="header-anchor" href="#こんな時に使う-1" aria-label="Permalink to &quot;こんな時に使う&quot;" data-v-79544c2b>​</a></h4><ul data-v-79544c2b><li data-v-79544c2b>複数のコンポーネント間でデータを共有する場合</li><li data-v-79544c2b>リソースを節約したい場合（例：HTTP呼び出しの回数を減らす）</li><li data-v-79544c2b>イベントストリームを表現する場合</li><li data-v-79544c2b>ステート管理やサービス間の通信</li></ul><h4 id="例-1" tabindex="-1" data-v-79544c2b>例 <a class="header-anchor" href="#例-1" aria-label="Permalink to &quot;例&quot;" data-v-79544c2b>​</a></h4><ul data-v-79544c2b><li data-v-79544c2b>アプリケーション全体で共有する設定情報</li><li data-v-79544c2b>ユーザーのログイン状態</li><li data-v-79544c2b>リアルタイムメッセージ（WebSocket）</li><li data-v-79544c2b>DOMイベント（クリック、スクロールなど）</li></ul></div></div><h2 id="まとめ" tabindex="-1" data-v-79544c2b>まとめ <a class="header-anchor" href="#まとめ" aria-label="Permalink to &quot;まとめ&quot;" data-v-79544c2b>​</a></h2><p data-v-79544c2b>コールドObservableとホットObservableを理解し、適切に使い分けることは、効率的なRxJSアプリケーションを構築するための重要なスキルです。</p><div class="tip custom-block" data-v-79544c2b><p class="custom-block-title" data-v-79544c2b>重要なポイント</p><ul data-v-79544c2b><li data-v-79544c2b><strong data-v-79544c2b>Cold Observable</strong>: 購読されて初めて動き出すストリーム（購読ごとに独立実行）</li><li data-v-79544c2b><strong data-v-79544c2b>Hot Observable</strong>: すでに動いているストリームを共有（複数購読で同じ実行）</li><li data-v-79544c2b><strong data-v-79544c2b>share()</strong>: ColdをHotに変換する最も簡単な方法</li><li data-v-79544c2b><strong data-v-79544c2b>shareReplay()</strong>: 過去の値をキャッシュしてHotに変換（API結果の共有に便利）</li></ul></div><div class="tip custom-block" data-v-79544c2b><p class="custom-block-title" data-v-79544c2b>設計判断の基準</p><ul data-v-79544c2b><li data-v-79544c2b>複数のサブスクライバー間でデータを共有する必要があるか？</li><li data-v-79544c2b>過去の値をキャッシュし、新しいサブスクライバーに提供する必要があるか？</li><li data-v-79544c2b>副作用（HTTPリクエストなど）の重複をどのように管理するか？</li></ul></div><p data-v-79544c2b>これらの考慮事項を元に、適切なObservableの種類とオペレーターを選択することで、効率的で堅牢なリアクティブアプリケーションを構築できます。</p><h2 id="関連セクション" tabindex="-1" data-v-79544c2b>関連セクション <a class="header-anchor" href="#関連セクション" aria-label="Permalink to &quot;関連セクション&quot;" data-v-79544c2b>​</a></h2><ul data-v-79544c2b><li data-v-79544c2b><strong data-v-79544c2b><a href="/RxJS-with-TypeScript/guide/operators/multicasting/share.html" data-v-79544c2b>share()オペレーター</a></strong> - share()の詳細解説</li><li data-v-79544c2b><strong data-v-79544c2b><a href="/RxJS-with-TypeScript/guide/anti-patterns/common-mistakes.html#4-sharereplay-の誤用" data-v-79544c2b>shareReplayの誤用</a></strong> - よくある間違いと対処法</li><li data-v-79544c2b><strong data-v-79544c2b><a href="/RxJS-with-TypeScript/guide/subjects/what-is-subject.html" data-v-79544c2b>Subject</a></strong> - HotなSubjectの理解</li></ul>`,71)]))}const r=s(h,[["render",l],["__scopeId","data-v-79544c2b"]]);export{v as __pageData,r as default};
